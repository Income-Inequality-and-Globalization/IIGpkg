// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// sum_ff_kron_v
arma::mat sum_ff_kron_v(const Rcpp::IntegerVector& availableObs, const arma::mat fPost, const arma::mat w_regs, const arma::cube Viarray);
RcppExport SEXP _IIGpkg_sum_ff_kron_v(SEXP availableObsSEXP, SEXP fPostSEXP, SEXP w_regsSEXP, SEXP ViarraySEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::IntegerVector& >::type availableObs(availableObsSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type fPost(fPostSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type w_regs(w_regsSEXP);
    Rcpp::traits::input_parameter< const arma::cube >::type Viarray(ViarraySEXP);
    rcpp_result_gen = Rcpp::wrap(sum_ff_kron_v(availableObs, fPost, w_regs, Viarray));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_IIGpkg_sum_ff_kron_v", (DL_FUNC) &_IIGpkg_sum_ff_kron_v, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_IIGpkg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
